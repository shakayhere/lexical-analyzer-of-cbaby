func void write(char: j)
(FUNC,^)
(VOID,^)
(ID,"write")
('(',^)
(CHAR,^)
(':',^)
(ID,"j")
(')',^)

{
('{',^)

print(j);
(PRINT,^)
('(',^)
(ID,"j")
(')',^)
(';',^)

}
('}',^)



func Integer: numPrint (Integer: num, Integer: length)
(FUNC,^)
(INTEGER,^)
(':',^)
(ID,"numPrint")
('(',^)
(INTEGER,^)
(':',^)
(ID,"num")
(',',^)
(INTEGER,^)
(':',^)
(ID,"length")
(')',^)

{
('{',^)

Integer: i, j, first, temp;
(INTEGER,^)
(':',^)
(ID,"i")
(',',^)
(ID,"j")
(',',^)
(ID,"first")
(',',^)
(ID,"temp")
(';',^)

char : a;
(CHAR,^)
(':',^)
(ID,"a")
(';',^)

a := 'x';
(ID,"a")
(AO,^)
(LC,'x')
(';',^)

print ( "enter number" );
(PRINT,^)
('(',^)
(STR,^)
(')',^)
(';',^)

In >> i;
(IN,^)
(IO,^)
(ID,"i")
(';',^)

println (i);
(PRINTLN,^)
('(',^)
(ID,"i")
(')',^)
(';',^)

i := length;
(ID,"i")
(AO,^)
(ID,"length")
(';',^)

while i > 0 :
(WHILE,^)
(ID,"i")
(RO,GT)
(NUM,0)
(':',^)

{
('{',^)

first:= 0;
(ID,"first")
(AO,^)
(NUM,0)
(';',^)

j := 1;
(ID,"j")
(AO,^)
(NUM,1)
(';',^)

while j < i:
(WHILE,^)
(ID,"j")
(RO,LT)
(ID,"i")
(':',^)

{
('{',^)

print( j);
(PRINT,^)
('(',^)
(ID,"j")
(')',^)
(';',^)

j := j + 1;
(ID,"j")
(AO,^)
(ID,"j")
('+',^)
(NUM,1)
(';',^)

}
('}',^)

if j == 1:{
(IF,^)
(ID,"j")
(RO,EQ)
(NUM,1)
(':',^)
('{',^)

print("one");
(PRINT,^)
('(',^)
(STR,^)
(')',^)
(';',^)

}
('}',^)

elif j==2:{
(ELIF,^)
(ID,"j")
(RO,EQ)
(NUM,2)
(':',^)
('{',^)

print("two");
(PRINT,^)
('(',^)
(STR,^)
(')',^)
(';',^)

}
('}',^)

else
(ELSE,^)

{
('{',^)

print("others");
(PRINT,^)
('(',^)
(STR,^)
(')',^)
(';',^)

}
('}',^)

/* this is a comment */
(SLC,^)

i:= i - 1;
(ID,"i")
(AO,^)
(ID,"i")
('-',^)
(NUM,1)
(';',^)

/*This is a

Multiline

Comment*/
(MLC,^)

}
('}',^)

print ( "temp is ");
(PRINT,^)
('(',^)
(STR,^)
(')',^)
(';',^)

println(temp);
(PRINTLN,^)
('(',^)
(ID,"temp")
(')',^)
(';',^)

ret i;
(RET,^)
(ID,"i")
(';',^)

}
('}',^)

